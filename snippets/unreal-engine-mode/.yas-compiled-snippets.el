;;; Compiled snippets and support files for `unreal-engine-mode'
;;; Snippet definitions:
;;;
(yas-define-snippets 'unreal-engine-mode
					 '(("upb" "UPROPERTY(EditAnywhere, BlueprintReadWrite)\n$0\n" "upb" nil nil nil "c:/Users/Jon/.emacs.d/snippets/unreal-engine-mode/upb" nil nil)
					   ("upa" "UPROPERTY(BlueprintAssignable)\n$0\n" "upa" nil nil nil "c:/Users/Jon/.emacs.d/snippets/unreal-engine-mode/upa" nil nil)
					   ("ull" "UE_LOG(Log${1:Category}, ${2:Display}, TEXT(\"$0\"));\n" "UE_LOG" nil nil nil "c:/Users/Jon/.emacs.d/snippets/unreal-engine-mode/ull" nil nil)
					   ("ufn" "UFUNCTION(BlueprintCallable)\nvirtual ${1:ReturnValue} ${2:FunctionName}($3);\n$0\n" "UFUNCTION" nil nil nil "c:/Users/Jon/.emacs.d/snippets/unreal-engine-mode/ufn" nil nil)
					   ("scenecomponent.h" "// prepend to source file: (setq-local yas-cpp-class \"U$1Component\")\n\n#pragma once\n\n#include \"CoreMinimal.h\"\n#include \"Components/SceneComponent.h\"\n#include \"$1Component.generated.h\"\n\n/* API: https://docs.unrealengine.com/5.3/en-US/API/Runtime/Engine/Components/USceneComponent/\n *\n */\n\nUCLASS( ClassGroup=(Custom), meta=(BlueprintSpawnableComponent) )\nclass `(format \"%s\" unreal-engine-module-api)` U${1:SceneComponentName}Component : public USceneComponent\n{\n	GENERATED_BODY()\n\npublic:\n\n	U$1Component(const FObjectInitializer& ObjectInitializer);\n\npublic:\n\n	/* NOTE DO NOT FORGET Super::FuncName IN OVERRIDEN UE METHODS */\n\n	// virtual void BeginPlay() override;\n\n	// virtual void TickComponent(float DeltaTime, ELevelTick TickType, FActorComponentTickFunction* ThisTickFunction) override;\n\n	// virtual void EndPlay(EEndPlayReason::Type EndPlayReason) override;\n\n	// virtual void BeginDestroy() override;\n\n};\n" "scenecomponent.h" nil nil nil "c:/Users/Jon/.emacs.d/snippets/unreal-engine-mode/scenecomponent-h" nil nil)
					   ("oes" "UFUNCTION()\nvirtual void ${1:OverlapEndFunc}(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);\n" "overlap end signature" nil nil nil "c:/Users/Jon/.emacs.d/snippets/unreal-engine-mode/overlap-end-signature" nil nil)
					   ("obs" "UFUNCTION()\nvirtual void ${1:OverlapBeginFunc}(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const FHitResult& SweepResult);" "overlap begin signature" nil nil nil "c:/Users/Jon/.emacs.d/snippets/unreal-engine-mode/overlap-begin-signature" nil nil)
					   ("ecc" "ECollisionChannel::$0\n" "ecc" nil nil nil "c:/Users/Jon/.emacs.d/snippets/unreal-engine-mode/ecc" nil nil)
					   ("chs" "UFUNCTION()\nvirtual void ${1:ComponentHitFunc}(UPrimitiveComponent* HitComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, FVector NormalImpulse, const FHitResult& SweepResult);\n" "component hit signature" nil nil nil "c:/Users/Jon/.emacs.d/snippets/unreal-engine-mode/component-hit-signature" nil nil)
					   ("component.cpp" "#include \"${1:Path}/`(format \"%s\" (string-trim-left yas-cpp-class \"^.\"))`.h\" // NOTE: this MUST be the first include\n\n\n`(format \"%s::%s\" yas-cpp-class yas-cpp-class)`(const FObjectInitializer& ObjectInitializer)\n{\n	PrimaryComponentTick.bCanEverTick = false; // enable for Tick()\n	// code here\n}\n\n/* void `(format \"%s\" yas-cpp-class)`::BeginPlay()\n{\n	Super::BeginPlay();\n	// code here\n} */\n\n/* void `(format \"%s\" yas-cpp-class)`::TickComponent(float DeltaTime, ELevelTick TickType, FActorComponentTickFunction* ThisTickFunction)\n{\n	Super::TickComponent(DeltaTime, TickType, ThisTickFunction);\n	// code here\n} */\n\n/* void `(format \"%s\" yas-cpp-class)`::EndPlay(const EEndPlayReason::Type EndPlayReason)\n{\n	Super::EndPlay(EndPlayReason);\n	// code here?\n} */\n\n/* void `(format \"%s\" yas-cpp-class)`::BeginDestroy()\n{\n	// code here?\n	Super::BeginDestroy();\n} */\n" "component.cpp"
						(boundp 'yas-cpp-class)
						nil nil "c:/Users/Jon/.emacs.d/snippets/unreal-engine-mode/component-cpp" nil nil)
					   ("ubp" "virtual void BeginPlay() override;\n" "begin-play"
						(not
						 (boundp 'yas-cpp-class))
						nil nil "c:/Users/Jon/.emacs.d/snippets/unreal-engine-mode/begin-play" nil nil)
					   ("actorcomponent.h" "// prepend to source file: (setq-local yas-cpp-class \"U$1Component\")\n\n\n#pragma once\n\n#include \"CoreMinimal.h\"\n#include \"Components/ActorComponent.h\"\n#include \"$1Component.generated.h\"\n\n/* API: https://docs.unrealengine.com/5.3/en-US/API/Runtime/Engine/Components/UActorComponent/\n *\n */\n\nUCLASS( ClassGroup=(Custom), meta=(BlueprintSpawnableComponent) )\nclass `(format \"%s\" unreal-engine-module-api)` U${1:ActorComponentName}Component : public UActorComponent\n{\n	GENERATED_BODY()\n\npublic:\n\n	U$1Component(const FObjectInitializer& ObjectInitializer);\n\npublic:\n\n	/* NOTE DO NOT FORGET Super::FuncName IN OVERRIDEN UE METHODS */\n\n	// virtual void BeginPlay() override;\n\n	// virtual void TickComponent(float DeltaTime, ELevelTick TickType, FActorComponentTickFunction* ThisTickFunction) override;\n\n	// virtual void EndPlay(const EEndPlayReason::Type EndPlayReason) override;\n\n	// virtual void BeginDestroy() override;\n\n};\n" "actorcomponent.h" nil nil nil "c:/Users/Jon/.emacs.d/snippets/unreal-engine-mode/actorcomponent-h" nil nil)
					   ("actor.h" "// prepend to source file: (setq-local yas-cpp-class A$1)\n\n\n#pragma once\n\n#include \"CoreMinimal.h\"\n#include \"GameFramework/Actor.h\"\n#include \"$1.generated.h\"\n\n/* API: https://docs.unrealengine.com/5.3/en-US/API/Runtime/Engine/GameFramework/AActor/\n *\n */\n\nUCLASS()\nclass `(format \"%s\" unreal-engine-module-api)` A${1:ActorName} : public AActor\n{\n	GENERATED_BODY()\n\npublic:\n\n	A$1();\n\npublic:\n\n	/* NOTE DO NOT FORGET Super::FuncName IN OVERRIDEN UE METHODS */\n\n	// virtual void Tick(float DeltaTime) override;\n\n	// virtual void BeginDestroy() override;\n\nprotected:\n\n	// virtual void BeginPlay() override;\n\n	// virtual void EndPlay(const EEndPlayReason::Type EndPlayReason) override;\n\n};" "actor.h" nil nil nil "c:/Users/Jon/.emacs.d/snippets/unreal-engine-mode/actor-h" nil nil)
					   ("actor.cpp" "#include \"{$1:Path}/`(format \"%s\" (string-trim-left yas-cpp-class \"^.\"))`.h\" // NOTE: this MUST be the first include\n\n\n`(format \"%s::%s\" yas-cpp-class yas-cpp-class)`()\n{\n	PrimaryActorTick.bCanEverTick = false; // enable for Tick()\n	// code here\n}\n\n/* void `(format \"%s\" yas-cpp-class)`::BeginPlay()\n{\n	Super::BeginPlay();\n	// code here\n} */\n\n/* void `(format \"%s\" yas-cpp-class)`::Tick(float DeltaTime)\n{\n	Super::Tick(DeltaTime);\n	// code here\n} */\n\n/* void `(format \"%s\" yas-cpp-class)`::EndPlay(const EEndPlayReason::Type EndPlayReason)\n{\n	Super::EndPlay(EndPlayReason);\n	// code here?\n} */\n\n/* void `(format \"%s\" yas-cpp-class)`::BeginDestroy()\n{\n	// code here?\n	Super::BeginDestroy();\n} */\n" "actor.cpp"
						(boundp 'yas-cpp-class)
						nil nil "c:/Users/Jon/.emacs.d/snippets/unreal-engine-mode/actor-cpp" nil nil)))


;;; Do not edit! File generated at Thu Feb 22 13:20:05 2024
